Nth number made of prime digits
        
Problems
Given a number 'N'. The task is to find the Nth number whose each digit is a prime number i.e 2, 3, 5, 7. In other words, you have to find the nth number of this sequence: 2, 3, 5, 7, 22, 23,.. and so on.

Input:
The first line contains a single integer T i.e. the number of test cases. The first and only line of each test case consists of an integer N. 

Output: 
In one line print the nth number of the given sequence made of prime digits.

Expected Auxiliary Space: O(N).

Constraints:
1 <= T <= 100
1 <= N <= 100

Examples:
Input:
2
10
21
Output:
33
222

Explanation:
Testcase 1: 10th number in the sequence of numbers whose each digit is prime is 33.
Testcase 2: 21st number in the sequence of numbers whose each digit is prime is 222.

Code : 
//Method1
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		InputStreamReader   ir  =   new InputStreamReader(System.in);
		BufferedReader      br  =   new BufferedReader(ir);
		
		int testCases = Integer.parseInt(br.readLine());
		//System.out.print(testCases);
		while(testCases>0) {
		    int number = Integer.parseInt(br.readLine());
		    String arr[] = new String[100];
		    arr[0] = "2"; arr[1] = "3"; arr[2] = "5"; arr[3] = "7";
		    
		    for(int i=1; i<25; i=i+4) {
		        arr[4*i]    = arr[i-1] + "2";
		        arr[4*i+1]  = arr[i-1] + "3";
		        arr[4*i+2]  = arr[i-1] + "5";
		        arr[4*i+3]  = arr[i-1] + "7";
		          
		        arr[4*i+4]  = arr[i] + "2";
		        arr[4*i+5]  = arr[i] + "3";
		        arr[4*i+6]  = arr[i] + "5";
		        arr[4*i+7]  = arr[i] + "7";
		        
		        arr[4*i+8]  = arr[i+1] + "2";
		        arr[4*i+9]  = arr[i+1] + "3";
		        arr[4*i+10]  = arr[i+1] + "5";
		        arr[4*i+11]  = arr[i+1] + "7";
		        
		        arr[4*i+12]  = arr[i+2] + "2";
		        arr[4*i+13]  = arr[i+2] + "3";
		        arr[4*i+14]  = arr[i+2] + "5";
		        arr[4*i+15]  = arr[i+2] + "7";
		    }
		    System.out.println(arr[number-1]);
		    --testCases;
		}
		
	}
	
	public static void display(String arr[], int len) {
		for(int i=0; i<len; i++) {
			System.out.println(arr[i]);
		}
	}
}

//Method2
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		InputStreamReader   ir  =   new InputStreamReader(System.in);
		BufferedReader      br  =   new BufferedReader(ir);
		
		int testCases = Integer.parseInt(br.readLine());
		//System.out.print(testCases);
		while(testCases>0) {
		    int number = Integer.parseInt(br.readLine());
		    int rem=0;
		    String num="";
		    while(number>0) {
		        rem = number%4;
		        //System.out.println("rem-->"+rem);
		        switch(rem) {
    		        case 1: num="2"+num; break;
    		        case 2: num="3"+num; break;
    		        case 3: num="5"+num; break;
    		        case 0: num="7"+num; break;
		        }
		        if(number%4==0) number--;
		        number = number/4;
		    }
		    System.out.println(num);
		    --testCases;
		}
		
	}
	
	public static void display(String arr[], int len) {
		for(int i=0; i<len; i++) {
			System.out.println(arr[i]);
		}
	}
}

Submit your code here : 
