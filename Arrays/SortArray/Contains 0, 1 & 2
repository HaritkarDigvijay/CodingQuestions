Problems
Given an array A of size N containing 0s, 1s, and 2s; you need to sort the array in ascending order.

Input:
The first line contains an integer 'T' denoting the total number of test cases. Then T testcases follow. Each testcases contains two lines of input. The first line denotes the size of the array N. The second lines contains the elements of the array A separated by spaces.

Output: 
For each testcase, print the sorted array.

Constraints:
1 <= T <= 500
1 <= N <= 106
0 <= Ai <= 2

Example:
Input :
2
5
0 2 1 2 0
3
0 1 0

Output:
0 0 1 2 2
0 0 1

Explanation:
Testcase 1: After segragating the 0s, 1s and 2s, we have 0 0 1 2 2 which shown in the output.

Code:
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		InputStreamReader   ir  =   new InputStreamReader(System.in);
		BufferedReader      br  =   new BufferedReader(ir);
		
		String secArr[];
		int arr[];
		
		int testCases = Integer.parseInt(br.readLine());
		while (testCases > 0) {
		    int len  =   Integer.parseInt(br.readLine());
		    
		    String arrStr  =   br.readLine();
		    secArr  =   arrStr.split(" ");
		    arr     =   stringToInteger(secArr, len);
		    
		    sortArray(arr, len);
		    System.out.println("");
		    --testCases;
		}
	}
	
  	public static int[] stringToInteger(String arr[], int len) {
	    int arrInt[] = new int[len];
	    for(int i=0; i<len; i++){
	        arrInt[i] = Integer.parseInt(arr[i]);
	    }
	    return arrInt;
	}
	
	public static void sortArray(int arr[], int len) {
	    int zero=0, one=0, two=0;
	    
	    for(int i=0; i<len; i++){
	        if(arr[i] == 0) zero++;
	        if(arr[i] == 1) one++;
	        if(arr[i] == 2) two++;
	    }
	    
	    while(zero>0){
	        System.out.print("0 ");
	        --zero;
	    }
	    while(one>0){
	        System.out.print("1 ");
	        --one;
	    }
	    while(two>0){
	        System.out.print("2 ");
	        --two;
	    }
	}
}
