
Problems
Given an array A of N positive integers. Find the sum of maximum sum increasing subsequence of the given array.

Input:
The first line of input contains an integer T denoting the number of test cases. The first line of each test case is N(the size of array). The second line of each test case contains array elements.

Output:
For each test case print the required answer in new line.

Constraints:
1 ≤ T ≤ 100
1 ≤ N ≤ 106
1 ≤ Ai ≤ 106

Example:
Input:
2
7
1 101 2 3 100 4 5
4
10 5 4 3

Output:
106
10

Explanation:
Testcase 1: All the increasing subsequences are : (1,101); (1,2,3,100); (1,2,3,4,5). Out of these (1, 2, 3, 100) has maximum sum,i.e., 106.

Code:
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		InputStreamReader   ir  =   new InputStreamReader(System.in);
		BufferedReader      br  =   new BufferedReader(ir);
		
		String secArr[];
		int arr[];
		
		int testCases = Integer.parseInt(br.readLine());
		while (testCases > 0) {
		    int len  =   Integer.parseInt(br.readLine());
		    
		    String arrStr  =   br.readLine();
		    secArr  =   arrStr.split(" ");
		    arr     =   stringToInteger(secArr, len);
		    
		    //if(len > 1) {
    		    System.out.println(maxSumIncSubSeq(arr, len));
		    //}
		    //else System.out.println("1");
		    
		    --testCases;
		}
	}
	
	public static int[] stringToInteger(String arr[], int len) {
	    int arrInt[] = new int[len];
	    for(int i=0; i<len; i++){
	        arrInt[i] = Integer.parseInt(arr[i]);
	    }
	    return arrInt;
	}
	
	public static int maxSumIncSubSeq(int arr[], int len) {
		int lis[] = new int [len];
		int sum[] = new int [len];
		int maxLen=0; int maxSum=0;
		
		for(int i=0; i<len; i++) {
			lis[i]=1; 
			sum[i]=arr[i];
		}
		
		for(int i=1; i<len; i++) {
			for(int j=0; j<i; j++) {
				if(arr[i]>arr[j] && lis[i]<lis[j]+1) {
					lis[i] = lis[j]+1;
					sum[i] = Math.max(sum[j] + arr[i], sum[i]);
//					System.out.println("i="+i+"	j="+j);
//					System.out.print("lis : "); display(lis, 21);
//					System.out.print("sum : "); display(sum, 21); 
					if(lis[i] > maxLen) maxLen=lis[i];
					if(sum[i] > maxSum) maxSum=sum[i];
				}
			}
		}
		
		return Math.max(maxSum, arr[0]);
	}
	
	public static void display(int arr[], int len) {
		for(int i=0; i<len; i++) {
			System.out.print(arr[i]+", ");
		}
		System.out.print("\n");
	}
}

Submit your solution here : https://practice.geeksforgeeks.org/problems/maximum-sum-increasing-subsequence/0/
