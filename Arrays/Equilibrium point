
Problems
Given an array A of N positive numbers. The task is to find the position where equilibrium first occurs in the array. Equilibrium position in an array is a position such that the sum of elements before it is equal to the sum of elements after it.

Input:
The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow. First line of each test case contains an integer N denoting the size of the array. Then in the next line are N space separated values of the array A.

Output:
For each test case in a new  line print the position at which the elements are at equilibrium if no equilibrium point exists print -1.

Constraints:
1 <= T <= 100
1 <= N <= 106
1 <= Ai <= 108

Example:
Input:
2
1
1
5
1 3 5 2 2

Output:
1
3

Explanation:
Testcase 1: Since its the only element hence its the only equilibrium point.
Testcase 2: For second test case equilibrium point is at position 3 as elements below it (1+3) = elements after it (2+2).

Code:
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class GFG {
	public static void main (String[] args) throws IOException {
		InputStreamReader   ir  =   new InputStreamReader(System.in);
		BufferedReader      br  =   new BufferedReader(ir);
		
		String secArr[];
		int arr[];
		
		int testCases = Integer.parseInt(br.readLine());
		while (testCases > 0) {
		    int len  =   Integer.parseInt(br.readLine());
		    
		    String arrStr  =   br.readLine();
		    secArr  =   arrStr.split(" ");
		    arr     =   stringToInteger(secArr, len);
		    
		    if(len > 1) {
    		    System.out.println(findEquilibrium(arr, len));
		    }
		    else System.out.println("1");
		    
		    --testCases;
		}
	}
	
	public static int[] stringToInteger(String arr[], int len) {
	    int arrInt[] = new int[len];
	    for(int i=0; i<len; i++){
	        arrInt[i] = Integer.parseInt(arr[i]);
	    }
	    return arrInt;
	}
	
	public static int findEquilibrium(int arr[], int len) {
	    int prefixSum[] = new int[len+2];
	    prefixSum[1] = arr[0];
	    for(int i=2; i<=len; i++) {
	        prefixSum[i] = prefixSum[i-1] + arr[i-1]; 
	    }
	    
	    for(int i=1; i<=len; i++) {
	        if(prefixSum[i-1] == (prefixSum[len] - prefixSum[i])) {
	            return i;
	        }
	    }
	    return -1;
	}
}
